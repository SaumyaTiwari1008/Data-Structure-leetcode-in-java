/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int d=Integer.MAX_VALUE;
    ArrayList<Integer> ans=new ArrayList<>();
    public int getMinimumDifference(TreeNode root) {
     inorder(root);
     for(int i=1;i<ans.size();i++)
     {
         d=(int)Math.min(d,ans.get(i)-ans.get(i-1));
     }   
     return d;
    }
    
    public void inorder(TreeNode node)
    {
        
        
        if(node==null)
        return;

        inorder(node.left);
        ans.add(node.val);
        inorder(node.right);
    }
}
