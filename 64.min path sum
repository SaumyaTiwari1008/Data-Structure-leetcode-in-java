class Solution {
    public int minPathSum(int[][] grid) {
        int dp[][]=new int[grid.length][grid[0].length];
        dp[0][0]=grid[0][0];
        int i,j;
         i=0;
         int m,n;
         m = grid.length;
         n = grid[0].length;
        
       
       
        for(i=grid.length-1;i>=0;i--)
        {
            for(j=grid[0].length-1;j>=0;j--)
            {
                if(i== m-1 && j==n-1)
                dp[i][j]=grid[i][j];

                else if(j==n-1)
                dp[i][j]=grid[i][j]+dp[i+1][j];

                else if(i==m-1)
                dp[i][j]=grid[i][j]+dp[i][j+1];

                else
                dp[i][j] = grid[i][j] + min(dp[i+1][j], dp[i][j+1]); 
            }
        }
        return dp[0][0];

    }
    public static int min(int a,int b)
    {
      int x=a<b?a:b;
      return x;
    }
}
